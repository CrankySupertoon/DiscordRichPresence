buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'

version = '2.0.0'
group = 'de.erdbeerbaerlp.discordrpc' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'discordrpc'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20180921-1.13'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    //accessTransformer = file('my_at.cfg')

    // default run configurations.
    // these can be tweaked, removed, or duplicated as needed.
    runs {
        client = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'info'
            workingDirectory project.file('run').canonicalPath
            mods {
                discordrpc {
                    source sourceSets.main
                }
            }
        }
        server = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'info'
            workingDirectory project.file('run').canonicalPath
            mods {
                discordrpc {
                    source sourceSets.main
                }
            }
        }
    }
}
repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}
configurations {
    shade {
    	transitive = false
    }
}
dependencies {
	//Forge
    minecraft 'net.minecraftforge:forge:1.13.2-25.0.147'
    //Hive MC Libs
    shade 'com.github.NukerHD:hive-java-api:1.0-snapshot'
    compile 'com.github.NukerHD:hive-java-api:1.0-snapshot'
    //Discord RichPresence
    shade 'com.github.MinnDevelopment:java-discord-rpc:v2.0.2'
    compile 'com.github.MinnDevelopment:java-discord-rpc:v2.0.2'
    shade 'com.github.MinnDevelopment:discord-rpc-release:v3.3.0'
    compile 'com.github.MinnDevelopment:discord-rpc-release:v3.3.0'
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
    manifest {
        attributes(["Specification-Title": "discordrpc",
                    "Specification-Vendor": "discordrpc",
                    "Specification-Version": "2.0", 
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"discordrpc",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}